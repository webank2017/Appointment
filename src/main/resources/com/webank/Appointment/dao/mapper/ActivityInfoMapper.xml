<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.webank.Appointment.dao.ActivityInfoDao">

	<select id="getActivityById" parameterType="int" resultMap="activityInfo">
    	select * from activityinfo where activityid=#{activityId};
    </select>

	<select id="getActivitiesByTheme" parameterType="String" resultMap="activityInfo">
    	select * from activityinfo where activitytheme like %#{activityId}%;
    </select>
    
	<select id="getActivitiesByUserId" parameterType="int" resultMap="activityInfo">
    	select * from activityinfo where activityid=#{userId};
    </select>
	/**
	 * 通过时间区域获取
	 * @param from
	 * @param to
	 * @return
	 */
	List<ActivityInfo> getActivitiesByTime(Timestamp from,Timestamp to);
	
	/**
	 * 通过类型获取
	 * @param type
	 * @return
	 */
	List<ActivityInfo> getActivitiesByType(int type);
	
	/**
	 * 通过地点获取
	 * @param place
	 * @return
	 */
	List<ActivityInfo> getActivitiesByPlace(String place);
	
	/**
	 * 通过坐标获取
	 * @param x
	 * @param y
	 * @return
	 */
	List<ActivityInfo> getActivitiesByXY(double x,double y);
	
	/**
	 * 通过描述获取
	 * @param desc
	 * @return
	 */
	List<ActivityInfo> getActivitiesByDesc(String desc);
	
	/**
	 * 通过状态获取
	 * @param state
	 * @return
	 */
	List<ActivityInfo> getActivitiesByState(int state);
	
	//---------------------------分状态
	
	/**
	 * 通过主题和状态获取
	 * @param theme
	 * @param state
	 * @return
	 */
	List<ActivityInfo> getActivitiesByThemeState(String theme,int state);
	
	/**
	 * 通过用户Id和状态获取
	 * @param userId
	 * @param state
	 * @return
	 */
	List<ActivityInfo> getActivitiesByUserIdState(int userId,int state);
	
	/**
	 * 通过时间和状态获取
	 * @param from
	 * @param to
	 * @param state
	 * @return
	 */
	List<ActivityInfo> getActivitiesByTimeState(Timestamp from,Timestamp to,int state);
	
	/**
	 * 通过类型和状态获取
	 * @param type
	 * @param state
	 * @return
	 */
	List<ActivityInfo> getActivitiesByTypeState(int type,int state);
	
	/**
	 * 通过地点和状态获取
	 * @param place
	 * @param state
	 * @return
	 */
	List<ActivityInfo> getActivitiesByPlaceState(String place,int state);
	
	/**
	 * 通过坐标和状态获取
	 * @param x
	 * @param y
	 * @param state
	 * @return
	 */
	List<ActivityInfo> getActivitiesByXYState(double x,double y,int state);
	
	/**
	 * 通过描述和状态获取
	 * @param desc
	 * @param state
	 * @return
	 */
	List<ActivityInfo> getActivitiesByDescState(String desc,int state);
	
	//--------------------------- 增加
	
	/**
	 * 添加活动
	 * @param activity
	 * @return
	 */
	int addActivity(ActivityInfo activity);
	//---------------------------删除
	
	
	/**
	 * 修改活动
	 * @param id
	 * @return
	 */
	int deleteActivitiesById(int id);

	//---------------------------修改
	
	/**
	 * 修改活动
	 * @param activityId
	 * @return
	 */
	int modifyActivity(ActivityInfo activity);
	<select id="getUserByUsername" parameterType="String" resultMap="user">
    	select * from user where username=#{username};
    </select>
    <select id="getUserByUserId" parameterType="int" resultMap="user">
    	select * from user where user_id=#{userId};
    </select>
    <insert id="addUser" parameterType="User" keyProperty="user_id" useGeneratedKeys="true">
		insert into user(username,password,email,register_date) values(#{username}, #{password}, #{email},#{register_date})
	</insert>
	<update id="updateUserPassword" parameterType="User">
	update user set password = #{password}
		where username = #{username};
	</update>
	<update id="updateUserVisitInfo" parameterType="User">
	update user set last_ip = #{lastIp},last_visit = #{lastVisit}
		where username = #{username};
	</update>
	<delete id="deleteUserByUsername" parameterType="String">
	delete from user where username=#{username};
	</delete>
	
	<select id="getUsers" resultMap="user">
		select * from user order by register_date desc
	</select>
	
	<select id="getAddedUsers" resultMap="user" parameterType="java.sql.Timestamp">
		select * from user where register_date>#{adminLastLoginTime};
	</select>
	
	<select id="isEmailUsed" resultMap="user" parameterType="String">
		select * from user where email=#{email} limit 1;
	</select>
	
	<update id="updateUserEmail" parameterType="User">
		update user set email = #{email}
		where username = #{username}
	</update>
	
	
    <resultMap type="ActivityInfo" id="activityInfo">  
        <id column="activityId" property="activityid"/>  
        <result column="activityTheme" property="activitytheme"/>  
        <result column="userId" property="userid"/>  
        <result column="launchTime" property="launchtime"/>  
        <result column="startTime" property="starttime"/>  
        <result column="endTime" property="endtime"/>  
        <result column="activityType" property="activitytype"/>  
        <result column="activityPlace" property="activityplace"/>  
        <result column="detailPlace" property="detailplace"/>  
        <result column="activityPlace_x" property="activityplace_x"/>  
        <result column="activityplace_y" property="activityplace_y"/>  
        <result column="numberNow" property="numbernow"/>  
        <result column="numberUp" property="numberup"/>  
        <result column="activityInfo" property="activityInfo"/>  
        <result column="contacter" property="contacter"/>  
        <result column="contacterNumber" property="contacternumber"/>
        <result column="genderRequire" property="genderrequire"/>  
        <result column="activityState" property="activitystate"/>  
        <result column="ifRequire" property="ifrequire"/>  
        <result column="password" property="password"/>  
        <result column="comments" property="comments"/>  
    </resultMap>  
</mapper>
